{"entities": [{"name": "Apache Cassandra Database Fabric", "type": "org.apache.brooklyn.entity.nosql.cassandra.CassandraFabric", "iconUrl": "classpath:///cassandra-logo.jpeg", "effectors": [{"returnType": "void", "name": "restart", "parameters": [], "description": "Restart the process/service represented by an entity"}, {"returnType": "void", "name": "start", "parameters": [{"defaultValue": null, "type": "java.lang.Object", "name": "locations", "description": "The location or locations to start in, as a string, a location object, a list of strings, or a list of location objects"}], "description": "Start the process/service represented by an entity"}, {"returnType": "void", "name": "stop", "parameters": [], "description": "Stop the process/service represented by an entity"}, {"returnType": "void", "name": "update", "parameters": [], "description": "Updates the cluster members"}], "sensors": [{"type": "com.google.common.collect.Multimap", "name": "cassandra.cluster.datacenterUsages", "links": {}, "description": "Current set of datacenters in use, with nodes in each"}, {"type": "java.util.Set", "name": "cassandra.cluster.datacenters", "links": {}, "description": "Current set of datacenters in use"}, {"type": "java.lang.String", "name": "cassandra.cluster.hostname", "links": {}, "description": "Hostname to connect to cluster with"}, {"type": "java.util.Set", "name": "cassandra.cluster.seeds.current", "links": {}, "description": "Current set of seeds to use to bootstrap the cluster"}, {"type": "java.lang.Boolean", "name": "cassandra.cluster.seeds.hasPublished", "links": {}, "description": "Whether we have published any seeds"}, {"type": "java.lang.Integer", "name": "cassandra.cluster.thrift.port", "links": {}, "description": "Cassandra Thrift RPC port to connect to cluster with"}, {"type": "java.lang.Boolean", "name": "cluster.first", "links": {}, "description": "Set on an entity if it is the first member of a cluster"}, {"type": "org.apache.brooklyn.api.entity.Entity", "name": "cluster.first.entity", "links": {}, "description": "The first member of the cluster"}, {"type": "java.lang.Integer", "name": "fabric.size", "links": {}, "description": "Fabric size"}, {"type": "java.util.Collection", "name": "group.members", "links": {}, "description": "Members of the group"}, {"type": "org.apache.brooklyn.api.entity.Entity", "name": "group.members.added", "links": {}, "description": "Entity added to group members"}, {"type": "java.lang.Integer", "name": "group.members.count", "links": {}, "description": "Number of members"}, {"type": "org.apache.brooklyn.api.entity.Entity", "name": "group.members.removed", "links": {}, "description": "Entity removed from group members"}, {"type": "java.lang.Boolean", "name": "service.isUp", "links": {}, "description": "Whether the service is active and availability (confirmed and monitored)"}, {"type": "org.apache.brooklyn.core.entity.lifecycle.Lifecycle", "name": "service.state", "links": {}, "description": "Actual lifecycle state of the service"}], "config": [{"type": "com.google.common.base.Function", "name": "cassandra.fabric.datacenter.namer", "reconfigurable": false, "description": "Function used to provide the cassandra.replication.datacenterName for a given location"}, {"type": "org.apache.brooklyn.api.entity.EntitySpec", "name": "dynamiccfabric.memberspec", "reconfigurable": false, "description": "entity spec for creating new cluster members"}, {"defaultValue": {}, "type": "java.util.Map", "name": "dynamicfabric.customChildFlags", "reconfigurable": false, "description": "Additional flags to be passed to children when they are being created"}, {"type": "java.lang.String", "name": "dynamicfabric.displayNamePrefix", "reconfigurable": false, "description": "Display name prefix, for created children"}, {"type": "java.lang.String", "name": "dynamicfabric.displayNameSuffix", "reconfigurable": false, "description": "Display name suffix, for created children"}, {"type": "org.apache.brooklyn.core.entity.factory.EntityFactory", "name": "dynamicfabric.factory", "reconfigurable": false, "description": "factory for creating new cluster members"}, {"defaultValue": "QuorumCheck[all;require=0,100.0%]", "type": "org.apache.brooklyn.util.collections.QuorumCheck", "name": "enricher.service_state.children_and_members.quorum.running", "reconfigurable": false, "description": "Problems check from children actual states (lifecycle), applied by default to members and children, not checking upness, but requiring by default that none are on-fire"}, {"defaultValue": "QuorumCheck[atLeastOne;require=1,0.0%]", "type": "org.apache.brooklyn.util.collections.QuorumCheck", "name": "enricher.service_state.children_and_members.quorum.up", "reconfigurable": false, "description": "Up check, applied by default to members, requiring at least one present and up"}, {"defaultValue": -1, "type": "java.lang.Integer", "name": "fabric.initial.quorumSize", "reconfigurable": false, "description": "Initial fabric quorum size - number of initial nodes that must have been successfully started to report success (if less than 0, then use a value based on INITIAL_SIZE of clusters)"}, {"defaultValue": false, "type": "java.lang.Boolean", "name": "group.members.delegate", "reconfigurable": false, "description": "Deprecated: Add delegate child entities for members of the group"}, {"defaultValue": "%s", "type": "java.lang.String", "name": "group.members.delegate.nameFormat", "reconfigurable": false, "description": "Delegate members name format string (Use %s for the original entity display name)"}], "description": "Cassandra is a highly scalable, eventually consistent, distributed, structured key-value store which provides a ColumnFamily-based data model richer than typical key/value systems"}]}